# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Set up machin-specific pathway
# very useful when you have multiple machine and synching through dropbox
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# save computer info in a variable
computer <- Sys.info()["nodename"]
# use control loop to set working directory
if(grepl(computer, "weitindeAir")){
setwd("/Users/weitinglin/Dropbox/DataCoding/my_R/R_primers")
} else{
if(grepl(computer, "another_computer")){
message("add the path in another computer")
} else {
warning("Check computer information")
} # end if (x...
} # end if(grep...
# to verify the current working directory is correctly set
getwd()
computer
# Set up machin-specific pathway
# very useful when you have multiple machine and synching through dropbox
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# save computer info in a variable
computer <- Sys.info()["nodename"]
# use control loop to set working directory
if(grepl(computer, "weitindeAir")){
setwd("/Users/weitinglin/Dropbox/DataCoding/my_R/R_primers")
}
else {
if(grepl(computer, "WLIN_PC")){
setwd("C:/Users/Wei-Ting/Dropbox/DataCoding/R_primers/R_files")
}
else {
warning("Check computer information")
} # end if (x...
} # end if(grep...
# to verify the current working directory is correctly set
getwd()
# save computer info in a variable
computer <- Sys.info()["nodename"]
# use control loop to set working directory
if(grepl(computer, "weitindeAir")){
setwd("/Users/weitinglin/Dropbox/DataCoding/my_R/R_primers")
}else {
if(grepl(computer, "WLIN_PC")){
setwd("C:/Users/Wei-Ting/Dropbox/DataCoding/R_primers/R_files")
} else {
warning("Check computer information")
} # end if (x...
} # end if(grep...
# to verify the current working directory is correctly set
getwd()
? set_path
x1 <- c(1,2,3)
x2 <- seq( 2, 9, by = 0.5)
x3 <- seq_along(x2)
source('C:/Users/Wei-Ting/Dropbox/DataCoding/R_primers/R_files/script_ex_sequence.R')
print('good')
message("good")
if( X >= 1 ) message("good!")
X <- 1
if( X >= 1 ) message("good!")
Y <- 2
if( X >= 1 && Y >=1 ){
}
if( X >= 1 && Y >=1 ){
message("good!")
}
## long form
if( X >= 1 && Y >=1 ){
message("good!")
message('X > 1 and Y > 1')
}
X~=
X~=`
X~=1
X!=1
if( X != 1 ){
message("X is not unity")
}else {
message('X = 1')
} # end if(X...
rm(list = computer)
rm(computer)
install.packages('stat')
install.packages(stat)
install.packages('stats')
install.packages("stats")
install.packages("stats")
